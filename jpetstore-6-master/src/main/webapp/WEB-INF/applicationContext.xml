<?xml version="1.0" encoding="UTF-8"?>
<!--

       Copyright 2010-2018 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
     http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

   <!-- in-memory database and a datasource -->
    <jdbc:embedded-database id="dataSource">
        <jdbc:script location="classpath:database/jpetstore-hsqldb-schema.sql"/>
        <jdbc:script location="classpath:database/jpetstore-hsqldb-dataload.sql"/>
    </jdbc:embedded-database>

    <!-- transaction manager, use DataSourceTransactionManager" for JDBC local tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- enable component scanning and autowire (beware that this does not enable mapper scanning!) -->    
    <context:component-scan base-package="org.mybatis.jpetstore.service" />

    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven />

    <!-- define the SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage" value="org.mybatis.jpetstore.domain" />
    </bean>


    <!-- ACTIVEMQ 实现  RPC remoting call 调用例子 start --> 

	<bean id="checkingAccountService-listener-zxm"
		class="org.springframework.jms.remoting.JmsInvokerServiceExporter">  <!-- 服务端暴露服务  -->
		<property name="serviceInterface"
			value="org.mybatis.jpetstore.service.CheckingAccountService" />
		<!-- <property name="service">
			<bean class="org.mybatis.jpetstore.service.SimpleCheckingAccountService" />
		</property> -->
		<property name="service" ref = "checkingAccountService-zxm"/>
	</bean>
	<bean id="checkingAccountService-zxm" class="org.mybatis.jpetstore.service.SimpleCheckingAccountService"/>

	<bean class="org.springframework.jms.listener.SimpleMessageListenerContainer"> <!-- 服务端监听消息  -->
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="queue" />
		<property name="concurrentConsumers" value="3" />
		<property name="messageListener" ref="checkingAccountService-listener-zxm" />
	</bean>
	
	
	<bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://localhost:61616" />
	</bean>
	<bean id="queue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="mmm" />
	</bean>


	<bean id="checkingAccountService"
		class="org.springframework.jms.remoting.JmsInvokerProxyFactoryBean">  <!-- 客户端调用  -->
		<property name="serviceInterface"
			value="org.mybatis.jpetstore.service.CheckingAccountService" />
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="queue" ref="queue" />
	</bean> 
	
	<bean id ="sendMailServiceAlias" class ="org.mybatis.matthew.service.SendMailServiceImpl"/>
	
	<!-- <context:component-scan base-package="org.mybatis.matthew.service" /> -->
	<!-- <context:annotation-config/>  -->
 
    <!-- ACTIVEMQ 实现  RPC remoting call 调用例子 end --> 
 
    <!-- scan for mappers and let them be autowired -->
    <mybatis:scan base-package="org.mybatis.jpetstore.mapper" />
</beans>
